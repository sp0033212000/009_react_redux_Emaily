{"version":3,"sources":["types/action.types.js","history.js","actions/index.js","components/Payment.js","components/Header.js","components/Landing.js","components/surveys/SurveyList.js","components/Dsahboard.js","components/surveys/SurveyField.js","types/form.types.js","components/surveys/SurveyForm.js","components/surveys/SurveyFormReview.js","utils/validateEmails.js","components/surveys/SurveyNew.js","components/App.js","reducers/surveysReducer.js","reducers/index.js","reducers/authReducer.js","index.js"],"names":["actionTypes","LOG_OUT","GET_USER","GET_SURVEYS","POST_TOKEN","POST_SURVEYS","createBrowserHistory","getUser","dispatch","a","async","Axios","get","res","type","payload","data","getSurveys","postToken","token","post","postSurveys","values","history","push","connect","actions","props","name","description","amount","stripeKey","process","className","state","auth","style","margin","to","id","href","Fragment","credits","renderContent","Landing","textAlign","surveys","list","useEffect","reverse","map","_id","title","body","dateSent","yes","no","key","Date","toLocaleDateString","Dsahboard","SurveyField","input","label","meta","error","touched","marginBottom","FIELDS","SurveyForm","onSubmit","handleSubmit","onSurveySubmit","formTypes","Field","component","formValues","form","surveyForm","onCancel","onClick","regExp","emails","invalidEmails","split","email","trim","filter","test","length","reduxForm","validate","errors","recipients","validateEmails","forEach","useState","showFormReview","setShowFormReview","exact","path","SurveyNew","initialState","allReducers","combineReducers","fromReducer","rootReducer","action","undefined","window","axios","JSON","parse","stringify","console","log","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.5b3cb6d9.chunk.js","sourcesContent":["const actionTypes = {\n\tLOG_OUT: \"LOG_OUT\",\n\tGET_USER: \"FETCH_USER\",\n\tGET_SURVEYS: \"GET_SURVEYS\",\n\tPOST_TOKEN: \"POST_TOKEN\",\n\tPOST_SURVEYS: \"POST_SURVEYS\"\n};\n\nexport default actionTypes;\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();\n","import Axios from \"axios\";\nimport actionTypes from \"../types/action.types\";\nimport history from \"../history\";\n\nexport const getUser = () => async (dispatch) => {\n\tconst res = await Axios.get(\"/api/current_user\");\n\n\tdispatch({\n\t\ttype: actionTypes.GET_USER,\n\t\tpayload: res.data\n\t});\n};\n\nexport const getSurveys = () => async (dispatch) => {\n\tconst res = await Axios.get(\"/api/surveys\");\n\n\tdispatch({\n\t\ttype: actionTypes.GET_SURVEYS,\n\t\tpayload: res.data\n\t});\n};\n\nexport const postToken = (token) => async (dispatch) => {\n\tconst res = await Axios.post(\"/api/stripe\", token);\n\n\tdispatch({\n\t\ttype: actionTypes.POST_TOKEN,\n\t\tpayload: res.data\n\t});\n};\n\nexport const postSurveys = (values) => async (dispatch) => {\n\tconst res = await Axios.post(\"/api/surveys\", values);\n\n\thistory.push(\"/surveys\");\n\tdispatch({ type: actionTypes.POST_SURVEYS, payload: res.data });\n};\n","import React from \"react\";\nimport StripeCheckout from \"react-stripe-checkout\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\n\nconst Payment = (props) => {\n\treturn (\n\t\t<StripeCheckout\n\t\t\tname=\"Emaily\"\n\t\t\tdescription=\"$5 for 5 Emails credits\"\n\t\t\tamount={500}\n\t\t\ttoken={(token) => props.postToken(token)}\n\t\t\tstripeKey={process.env.REACT_APP_STRIPE_KEY}\n\t\t>\n\t\t\t<button className=\"btn\">Add Credits</button>\n\t\t</StripeCheckout>\n\t);\n};\n\nexport default connect(null, actions)(Payment);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Payment from \"./Payment\";\n\nconst Header = (props) => {\n\tconst renderContent = () => {\n\t\tswitch (props.auth) {\n\t\t\tcase null:\n\t\t\t\treturn null;\n\t\t\tcase false:\n\t\t\t\treturn (\n\t\t\t\t\t<li>\n\t\t\t\t\t\t<a href=\"/auth/google\">Login With Google</a>\n\t\t\t\t\t</li>\n\t\t\t\t);\n\t\t\tdefault:\n\t\t\t\treturn (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<Payment />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t\t<li style={{ margin: \"0 10px\" }}>Credits: {props.auth.credits}</li>\n\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t<a href=\"/api/logout\">Logout</a>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t);\n\t\t}\n\t};\n\n\treturn (\n\t\t<nav>\n\t\t\t<div className=\"nav-wrapper\">\n\t\t\t\t<Link\n\t\t\t\t\tstyle={{ margin: \"0 10px\" }}\n\t\t\t\t\tto={props.auth ? \"/surveys\" : \"/\"}\n\t\t\t\t\tclassName=\"left brand-logo\"\n\t\t\t\t>\n\t\t\t\t\tEmaily\n\t\t\t\t</Link>\n\t\t\t\t<ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n\t\t\t\t\t{renderContent()}\n\t\t\t\t</ul>\n\t\t\t</div>\n\t\t</nav>\n\t);\n};\n\nconst mapStateToprops = (state) => {\n\treturn { auth: state.auth };\n};\n\nexport default connect(mapStateToprops, null)(Header);\n","import React from \"react\";\n\nconst Landing = () => {\n\treturn (\n\t\t<div style={{ textAlign: \"center\" }}>\n\t\t\t<h1>Emaily!</h1>\n\t\t\tCollect feedback from your users\n\t\t</div>\n\t);\n};\n\nexport default Landing;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../actions\";\n\nconst SurveyList = ({ surveys, getSurveys }) => {\n\tuseEffect(() => {\n\t\tgetSurveys();\n\t}, []);\n\n\tconst renderSurveys = () => {\n\t\treturn surveys.reverse().map(({ _id, title, body, dateSent, yes, no }) => {\n\t\t\treturn (\n\t\t\t\t<div key={_id} className=\"card blue-grey darken-1\">\n\t\t\t\t\t<div className=\"card-content white-text\">\n\t\t\t\t\t\t<span className=\"card-title\">{title}</span>\n\t\t\t\t\t\t<p>{body}</p>\n\t\t\t\t\t\t<p className=\"right\">\n\t\t\t\t\t\t\tSent on: {new Date(dateSent).toLocaleDateString()}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"card-action\">\n\t\t\t\t\t\t<a>Yes: {yes}</a>\n\t\t\t\t\t\t<a>No : {no}</a>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t};\n\n\treturn <div>{renderSurveys()}</div>;\n};\n\nconst mapStateToProps = (state) => ({\n\tsurveys: state.surveys.list\n});\n\nexport default connect(mapStateToProps, actions)(SurveyList);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport SurveyList from \"./surveys/SurveyList\";\n\nconst Dsahboard = () => {\n\treturn (\n\t\t<div>\n\t\t\t<SurveyList />\n\t\t\t<div className=\"fixed-action-btn\">\n\t\t\t\t<Link to=\"/surveys/new\" className=\"btn-floating btn-large red\">\n\t\t\t\t\t<i className=\"material-icons\">add</i>\n\t\t\t\t</Link>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default Dsahboard;\n","import React from \"react\";\n\nconst SurveyField = ({ input, label, meta: { error, touched } }) => {\n\treturn (\n\t\t<div>\n\t\t\t<label>{label}</label>\n\t\t\t<input style={{ marginBottom: \"5px\" }} {...input} />\n\t\t\t<div className=\"red-text\" style={{ marginBottom: \"20px\" }}>\n\t\t\t\t{touched && error}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default SurveyField;\n","export default {\n\tFIELDS: [\n\t\t{ name: \"title\", label: \"Survey Title\" },\n\t\t{ name: \"subject\", label: \"Subject Line\" },\n\t\t{ name: \"body\", label: \"Email Body\" },\n\t\t{ name: \"recipients\", label: \"Recipient List\" }\n\t]\n};\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport { Link } from \"react-router-dom\";\nimport SurveyField from \"./SurveyField\";\nimport formTypes from \"../../types/form.types\";\n\nconst SurveyForm = (props) => {\n\treturn (\n\t\t<div>\n\t\t\t<form onSubmit={props.handleSubmit(props.onSurveySubmit)}>\n\t\t\t\t{formTypes.FIELDS.map(({ name, label }) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Field\n\t\t\t\t\t\t\tkey={name}\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname={name}\n\t\t\t\t\t\t\tlabel={label}\n\t\t\t\t\t\t\tcomponent={SurveyField}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<Link to=\"/surveys\" className=\"red btn-flat white-text\">\n\t\t\t\t\tCancel\n\t\t\t\t\t<i className=\"material-icons left\">close</i>\n\t\t\t\t</Link>\n\t\t\t\t<button className=\"teal btn-flat right white-text\" type=\"submit\">\n\t\t\t\t\tNext\n\t\t\t\t\t<i className=\"material-icons right\">done</i>\n\t\t\t\t</button>\n\t\t\t</form>\n\t\t</div>\n\t);\n};\n\nexport default SurveyForm;\n// export default reduxForm({\n// \tform: \"surveyForm\",\n// \tvalidate,\n// \tdestroyOnUnmount: false\n// })(SurveyForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport formTypes from \"../../types/form.types\";\nimport * as actions from \"../../actions\";\n\nconst SurveyFormReview = ({ onCancel, formValues, postSurveys }) => {\n\tconst renderForm = () => {\n\t\treturn formTypes.FIELDS.map(({ label, name }) => {\n\t\t\treturn (\n\t\t\t\t<div key={name}>\n\t\t\t\t\t<label>{label}</label>\n\t\t\t\t\t<div>{formValues[name]}</div>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h5>Please confirm your entries</h5>\n\t\t\t{renderForm()}\n\t\t\t<button\n\t\t\t\tonClick={onCancel}\n\t\t\t\tclassName=\"orange darken-4 btn-flat white-text\"\n\t\t\t>\n\t\t\t\tBack\n\t\t\t\t<i className=\"material-icons left\">close</i>\n\t\t\t</button>\n\t\t\t<button\n\t\t\t\tonClick={() => {\n\t\t\t\t\tpostSurveys(formValues);\n\t\t\t\t}}\n\t\t\t\tclassName=\"green btn-flat right white-text\"\n\t\t\t\ttype=\"submit\"\n\t\t\t>\n\t\t\t\tSend\n\t\t\t\t<i className=\"material-icons right\">email</i>\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nconst mapStateToProps = (state) => ({\n\tformValues: state.form.surveyForm.values\n});\n\nexport default connect(mapStateToProps, actions)(SurveyFormReview);\n","const regExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport default (emails) => {\n\tconst invalidEmails = emails\n\t\t.split(\",\")\n\t\t.map((email) => email.trim())\n\t\t.filter((email) => regExp.test(email) === false);\n\n\tif (invalidEmails.length) {\n\t\treturn `These emails are invalid: ${invalidEmails}`;\n\t}\n\n\treturn;\n};\n","import React, { useState } from \"react\";\nimport SurveyForm from \"./SurveyForm\";\nimport SurveyFormReview from \"./SurveyFormReview\";\nimport { reduxForm } from \"redux-form\";\nimport formTypes from \"../../types/form.types\";\nimport validateEmails from \"../../utils/validateEmails\";\n\nconst SurveyNew = (props) => {\n\tconst [showFormReview, setShowFormReview] = useState(false);\n\n\tconst renderContent = () => {\n\t\tif (showFormReview) {\n\t\t\treturn (\n\t\t\t\t<SurveyFormReview\n\t\t\t\t\t{...props}\n\t\t\t\t\tonCancel={() => setShowFormReview(false)}\n\t\t\t\t/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<SurveyForm {...props} onSurveySubmit={() => setShowFormReview(true)} />\n\t\t);\n\t};\n\n\treturn <div>{renderContent()}</div>;\n};\n\nfunction validate(values) {\n\tconst errors = {};\n\n\terrors.recipients = validateEmails(values.recipients || \"\");\n\n\tformTypes.FIELDS.forEach(({ name }) => {\n\t\tif (!values[name]) {\n\t\t\terrors[name] = `You must provide a ${name}!`;\n\t\t}\n\t});\n\n\treturn errors;\n}\n\nexport default reduxForm({\n\tform: \"surveyForm\",\n\tvalidate\n})(SurveyNew);\n","import React, { useEffect } from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions\";\nimport history from \"../history\";\n\nimport Header from \"./Header\";\nimport Landing from \"./Landing\";\nimport Dsahboard from \"./Dsahboard\";\nimport SurveyNew from \"./surveys/SurveyNew\";\n\nconst App = ({ getUser }) => {\n\tuseEffect(() => {\n\t\tgetUser();\n\t}, [getUser]);\n\treturn (\n\t\t<Router history={history}>\n\t\t\t<div className=\"container\">\n\t\t\t\t<Header />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path=\"/\" component={Landing} />\n\t\t\t\t\t<Route exact path=\"/surveys\" component={Dsahboard} />\n\t\t\t\t\t<Route path=\"/surveys/new\" component={SurveyNew} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Router>\n\t);\n};\n\nexport default connect(null, actions)(App);\n","import actionTypes from \"../types/action.types\";\n\nconst initialState = {\n\tlist: []\n};\n\nexport default (state = initialState, { type, payload }) => {\n\tswitch (type) {\n\t\tcase actionTypes.GET_SURVEYS:\n\t\t\treturn { ...state, list: payload };\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import { combineReducers } from \"redux\";\nimport { reducer as fromReducer } from \"redux-form\";\nimport authReducer from \"./authReducer\";\nimport surveysReducer from \"./surveysReducer\";\nimport actionTypes from \"../types/action.types\";\n\nconst allReducers = combineReducers({\n\tauth: authReducer,\n\tform: fromReducer,\n\tsurveys: surveysReducer\n});\n\nconst rootReducer = (state, action) => {\n\tif (action.type === actionTypes.LOG_OUT) {\n\t\tstate = undefined;\n\t}\n\n\treturn allReducers(state, action);\n};\n\nexport default rootReducer;\n","import actionTypes from \"../types/action.types\";\n\n// const initialState = {};\n\nexport default (state = null, { type, payload }) => {\n\tswitch (type) {\n\t\tcase actionTypes.GET_USER:\n\t\tcase actionTypes.POST_SURVEYS:\n\t\tcase actionTypes.POST_TOKEN:\n\t\t\treturn payload || false;\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n","import \"materialize-css/dist/css/materialize.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\n\nimport App from \"./components/App\";\nimport reducers from \"./reducers/index\";\n\n//for test\nimport axios from \"axios\";\nwindow.axios = axios;\n\nconst test = JSON.parse(JSON.stringify(process.env));\nconsole.log(test);\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n\treducers,\n\tcomposeEnhancers(applyMiddleware(reduxThunk))\n);\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<App />\n\t</Provider>,\n\tdocument.querySelector(\"#root\")\n);\n"],"sourceRoot":""}